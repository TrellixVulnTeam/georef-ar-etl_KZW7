"""Initial migration

Revision ID: 58a7ec81cb23
Revises: 
Create Date: 2019-04-04 12:11:01.883465

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision = '58a7ec81cb23'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('georef_provincias',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('fuente', sa.String(), nullable=False),
    sa.Column('categoria', sa.String(), nullable=False),
    sa.Column('nombre_completo', sa.String(), nullable=False),
    sa.Column('iso_id', sa.String(), nullable=False),
    sa.Column('iso_nombre', sa.String(), nullable=False),
    sa.Column('lon', sa.Float(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('geometria', geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('georef_departamentos',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('fuente', sa.String(), nullable=False),
    sa.Column('categoria', sa.String(), nullable=False),
    sa.Column('nombre_completo', sa.String(), nullable=False),
    sa.Column('provincia_interseccion', sa.Float(), nullable=False),
    sa.Column('lon', sa.Float(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('geometria', geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON'), nullable=False),
    sa.Column('provincia_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['provincia_id'], ['georef_provincias.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('georef_municipios',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('fuente', sa.String(), nullable=False),
    sa.Column('categoria', sa.String(), nullable=False),
    sa.Column('nombre_completo', sa.String(), nullable=False),
    sa.Column('provincia_interseccion', sa.Float(), nullable=False),
    sa.Column('lon', sa.Float(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('geometria', geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON'), nullable=False),
    sa.Column('provincia_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['provincia_id'], ['georef_provincias.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('georef_calles',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('fuente', sa.String(), nullable=False),
    sa.Column('categoria', sa.String(), nullable=False),
    sa.Column('inicio_derecha', sa.Integer(), nullable=False),
    sa.Column('fin_derecha', sa.Integer(), nullable=False),
    sa.Column('inicio_izquierda', sa.Integer(), nullable=False),
    sa.Column('fin_izquierda', sa.Integer(), nullable=False),
    sa.Column('geometria', geoalchemy2.types.Geometry(geometry_type='MULTILINESTRING'), nullable=False),
    sa.Column('provincia_id', sa.String(), nullable=False),
    sa.Column('departamento_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['departamento_id'], ['georef_departamentos.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['provincia_id'], ['georef_provincias.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('georef_localidades',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('fuente', sa.String(), nullable=False),
    sa.Column('categoria', sa.String(), nullable=False),
    sa.Column('municipio_id', sa.String(), nullable=True),
    sa.Column('lon', sa.Float(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('geometria', geoalchemy2.types.Geometry(geometry_type='MULTIPOINT'), nullable=False),
    sa.Column('provincia_id', sa.String(), nullable=False),
    sa.Column('departamento_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['departamento_id'], ['georef_departamentos.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['municipio_id'], ['georef_municipios.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['provincia_id'], ['georef_provincias.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('georef_cuadras',
    sa.Column('inicio_derecha', sa.Integer(), nullable=False),
    sa.Column('fin_derecha', sa.Integer(), nullable=False),
    sa.Column('inicio_izquierda', sa.Integer(), nullable=False),
    sa.Column('fin_izquierda', sa.Integer(), nullable=False),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('calle_id', sa.String(), nullable=False),
    sa.Column('geometria', geoalchemy2.types.Geometry(geometry_type='MULTILINESTRING'), nullable=False),
    sa.ForeignKeyConstraint(['calle_id'], ['georef_calles.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('georef_intersecciones',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('calle_a_id', sa.String(), nullable=False),
    sa.Column('calle_b_id', sa.String(), nullable=False),
    sa.Column('geometria', geoalchemy2.types.Geometry(geometry_type='POINT'), nullable=False),
    sa.ForeignKeyConstraint(['calle_a_id'], ['georef_calles.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['calle_b_id'], ['georef_calles.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('georef_intersecciones')
    op.drop_table('georef_cuadras')
    op.drop_table('georef_localidades')
    op.drop_table('georef_calles')
    op.drop_table('georef_municipios')
    op.drop_table('georef_departamentos')
    op.drop_table('georef_provincias')
    # ### end Alembic commands ###
